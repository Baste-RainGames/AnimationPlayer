- means "should do"
+ means "done!"
* means "working on RIGHT THE FUCK NOW"

Animation states:
    - Have the states get a GUID rather than an index, to support reordering and stuff better.
    - Different kinds of states:
        * blend trees
            - Nested!
            * 2D (almost finished, need to implement the good algo!)
            * allow state reordering
        - sequences (state A into state B into state C, etc.)
            - this can be used to change into a specific idle state after standing still.
        - random (bunch of states, selects a random one when you enter)
    - Check if it's possible to loop/not loop in the state, and how expensive that is compared to the native (stupid) way of doing it
    + Add support for dragging animation clips over the list of states to generate a new state
        + Also add support for dragging in the .fbx or .blend or whatever (ModelImporter), and add all clips in it
        + If you drag in several, create a "Do you want to add many clips or blend tree" popup
    * Preview (oh my!)
        + preview for single-clip states
        + preview for other kinds of states
        - allow for setting blend vars on previews
        - previews for transitions
        - make sure the time slider gives the actual animation time! Now it's going to desynchronize (although the relative value is good)
        - reset to bind pose after the preview is done
    * Animation events!
        + Make own tab for animation events
        + Define API. 
        + Make sure events are called
        - Make settings:
            - min blend factor - default to 0. Only call the event if the current blend factor is larger than this
            - Play only first/repeat. If the animation loops, do we want this to happen every time, or just the first one?
    - Make it possible to play an animation relative to the current position. This will make Unity-created animations for eg. doors be a _LOT_ easier, and faster to boot.
    - Add support for mirroring.

Animation transitions:
    - Transition-by-clip:
        If you're transitioning from A to B, specify a clip C so the transition is A->C->B.
        This will be usefull for run-stops and such.
        Have to figure out if C here is a clip, another state in the state view, or another state in a special view.
    - Several ways of transitioning between two states
        probably want default transition and named transition
    * Better layout! Show list of all defined transitions
        + There's a list of all transitions defined from the current state
        - Should have a list of ALL transitions?

Misc
    - Ensure that all public methods in AnimationPlayer have int overload, so it's not neccessary to pay the cost of sending in strings
    - Make the cached values in the editor be per-layer where appropriate (selected from/to state for transitions)
    - Make a caching system that doesn't depend on EditorPrefs? Cluttering the registry is an ugly hack.
        - But then where?
    - Add re-order support to things? Or better view for states
    - Metadata:
        - list all transitions (with go-to buttons)
        + list all fbx/.anim files referenced
        + list all clips used
        - list all blend variables
        - make sure all of these lists update when stuff is added. On changing tab is not enough, could have two inspectors open
    - fix the parts of the window shifting around as you unfold stuff (like clips used in metadata)
        - THAT STOPPED HAPPENING?
    - AnimationPlayer should have internal BlendVarControllers, so there's not duplication between SetBlendVar and GetBlendVarController().SetValue

Issues:
    - Calling Play("MyState") every frame will cause MyState to never play, if wherever you're calling from executes Update before the AnimationPlayer.
      This is because the timer for when the transition was started gets reset to this frame every time you call it. I don't have any good solutions for
      this, but then again, calling Play("Attack") in Update is a bit insane.  
